fastdfs安装配置：
1.安装依赖包
./make.sh
sudo ./make.sh install

2.安装FastDFS
./make.sh
sudo ./make.sh install

3.配置tracker
sudo cp /etc/fdfs/tracker.conf.sample /etc/fdfs/tracker.conf
mkdir -p /home/ubuntu/fastdfs/tracker
sudo vim /etc/fdfs/tracker.conf
修改 base_path=/home/ubuntu/fastdfs/tracker

4.配置storage
sudo cp /etc/fdfs/storage.conf.sample /etc/fdfs/storage.conf
mkdir -p /home/ubuntu/fastdfs/storage
sudo vim /etc/fdfs/tracker.conf
修改 base_path=/home/ubuntu/fastdfs/storage
修改 store_path0=/home/ubuntu/fastdfs/storage
修改 tracker_server=ip地址:22122

5.fdfs启动：
sudo service fdfs_trackerd start
sudo service fdfs_storaged start

6.测试fastdfs
sudo cp /etc/fdfs/client.conf.sample /etc/fdfs/client.conf
sudo vim /etc/fdfs/client.conf
修改 base_path=/home/ubuntu/fastdfs/tracker
tracker_server=ip:22122

7.上传文件测试
fdfs_upload_file /etc/fdfs/client.conf 图片路径
返回类似“group1/M00/00/00/ajZ8CV5JXkSEdCzgAAAAAOjSSX00841498”说明ok

8.安装fasfdfs-nginx-module web服务器epoll
进入nginx解压缩目录， sudo ./configure --prefix=/usr/local/nginx --add-module=fastdfs-nginx-module解压目录绝对路径/src
sudo ./make
sudo ./make install
sudo cp fastdfs-nginx-module解压目录中src下的mod_fastdfs.conf /etc/fdfs/mod_fastdfs.conf
修改内容：
connect_timeout=10
tracker_sercer=ip地址：22122
url_have_group_name=true
store_path0=/home/ubuntu/fastdfs/storage


sudo cp fastdfs解压缩目录/conf/http.conf /etc/fdfs/http.conf
sudo cp fastdfs解压缩目录/conf/mime.types /etc/fdfs/mime.types
sudo vim /usr/local/nginx/conf/nginx.conf
在http部分中添加如下：
server {
        listen 8888;
        server_name localhost;
        location ~/group[0-9]/ {
                ngx_fastdfs_module;
        }
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
                root html;
        }
    }

nginx启动(关闭)：
sudo /usr/loacl/nginx/sbin/nginx (-s stop)
nginx重启
sudo /usr/loacl/nginx/sbin/nginx -s reload

重启fastdfs：
sudo service fdfs_storaged restart





收集静态文件：
设置static_root
创建相应的文件夹
python manage.py collectstatic

配置supervisor和celery：
superviosr常用命令：
supervisorctl status 查看进程运行状态
supervisorctl start 进程名 启动进程
supervisorctl stop 进程名 关闭进程
supervisorctl restart 进程名 重启进程
supervisorctl update 重新载入配置文件
supervisorctl shutdown 关闭supervisord
supervisorctl clear 进程名 清空进程日志
supervisorctl 进入到交互模式下。使用help查看所有命令。
start stop restart + all 表示启动，关闭，重启所有进程。

